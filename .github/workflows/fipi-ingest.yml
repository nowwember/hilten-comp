name: FIPI Ingest (EGE basic)

on:
  workflow_dispatch:
    inputs:
      startPage:
        description: "Start page"
        required: true
        default: "1"
      endPage:
        description: "End page"
        required: true
        default: "10"
      limit:
        description: "Max cards (safety)"
        required: true
        default: "400"

permissions:
  contents: write
  pull-requests: write

jobs:
  ingest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Install Playwright (Chromium)
        run: npx playwright install chromium

      - name: Ingest RAW
        env:
          FIPI_EGE_BASIC_START: ${{ secrets.FIPI_EGE_BASIC_START }}
          INGEST_USER_AGENT: ${{ secrets.INGEST_USER_AGENT }}
        run: |
          echo "Run ingest pages ${{ github.event.inputs.startPage }}..${{ github.event.inputs.endPage }}, limit=${{ github.event.inputs.limit }}"
          DEBUG_SAVE_HTML=0 npm run ingest:fipi -- --exam=ege --level=basic --startPage=${{ github.event.inputs.startPage }} --endPage=${{ github.event.inputs.endPage }} --limit=${{ github.event.inputs.limit }}

      - name: Curate
        run: tsx scripts/fipi/curate.ts --exam=ege --level=basic --limit=2000

      - name: Coverage
        run: tsx scripts/fipi/report-coverage.ts

      - name: Save coverage summary
        if: always()
        run: |
          echo "FIPI Ingest Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Pages:** ${{ github.event.inputs.startPage }}..${{ github.event.inputs.endPage }}  |  **Limit:** ${{ github.event.inputs.limit }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f scripts/fipi/reports/coverage.md ]; then
            echo "### Coverage (excerpt)" >> $GITHUB_STEP_SUMMARY
            head -n 60 scripts/fipi/reports/coverage.md >> $GITHUB_STEP_SUMMARY
          else
            echo "_coverage.md not found_" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Detect changes
        id: changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          ts=$(date +%Y%m%d-%H%M%S)
          BR="fipi-update/$ts"
          git checkout -b "$BR"
          git add -A
          if git diff --cached --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            git commit -m "FIPI ingest update: $ts"
            git push --set-upstream origin "$BR"
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "branch=$BR" >> $GITHUB_OUTPUT
          fi

      - name: Open PR
        if: steps.changes.outputs.changed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const branch = core.getInput('branch') || '${{ steps.changes.outputs.branch }}'
            const { data: pr } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `FIPI ingest update (${branch})`,
              head: branch,
              base: context.ref.replace('refs/heads/',''),
              body: 'Auto-generated ingest/curate/coverage update.'
            })
            core.setOutput('pr', pr.html_url)


