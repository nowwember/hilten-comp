name: FIPI Ingest (EGE basic)

on:
  workflow_dispatch:
    inputs:
      startPage:
        description: "Start page"
        required: true
        default: "1"
      endPage:
        description: "End page"
        required: true
        default: "10"
      limit:
        description: "Max cards (safety)"
        required: true
        default: "400"
      enforceGate:
        description: "Enforce MVP gate (2 per subtopic)"
        required: false
        default: "false"
      runToCoverage:
        description: "Use run-to-coverage pipeline"
        required: false
        default: "true"
      mode:
        description: "Ingest mode (basic|byTask)"
        required: false
        default: "byTask"
      startTask:
        description: "Start task (byTask)"
        required: false
        default: "1"
      endTask:
        description: "End task (byTask)"
        required: false
        default: "11"

permissions:
  contents: write
  pull-requests: write

jobs:
  ingest:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Install Playwright (Chromium)
        run: npx playwright install --with-deps chromium

      - name: Ingest RAW
        env:
          FIPI_EGE_BASIC_START: ${{ secrets.FIPI_EGE_BASIC_START }}
          INGEST_USER_AGENT: ${{ secrets.INGEST_USER_AGENT }}
        run: |
          echo "Mode: ${{ inputs.mode }} | Pages: ${{ inputs.startPage }}..${{ inputs.endPage }} | Limit=${{ inputs.limit }} | Tasks: ${{ inputs.startTask }}..${{ inputs.endTask }} | runToCoverage=${{ inputs.runToCoverage }}"
          if [ "${{ inputs.mode }}" = "byTask" ]; then
            CMD="npx tsx scripts/fipi/ingest.ts --exam=ege --level=basic --mode=byTask --startTask=${{ inputs.startTask }} --endTask=${{ inputs.endTask }} --startPage=${{ inputs.startPage }} --endPage=${{ inputs.endPage }} --limit=${{ inputs.limit }}"
            if [ "${{ inputs.runToCoverage }}" = "true" ]; then CMD="$CMD --runToCoverage"; fi
            echo "$CMD"; eval "$CMD" | tee ingest.log
          else
            CMD="npx tsx scripts/fipi/ingest.ts --exam=ege --level=basic --mode=basic --startPage=${{ inputs.startPage }} --endPage=${{ inputs.endPage }} --limit=${{ inputs.limit }}"
            echo "$CMD"; eval "$CMD" | tee ingest.log
          fi

      - name: Curate
        run: npx tsx scripts/fipi/curate.ts --exam=ege --level=basic --limit=2000

      - name: Coverage
        run: npx tsx scripts/fipi/report-coverage.ts --exam=ege --level=basic

      - name: Frame URLs visited (from logs)
        run: |
          echo "Frame URLs visited (parsed from ingest logs):"
          if [ -f ingest.log ]; then
            grep -E "frameURL=" ingest.log || echo "No explicit frameURL lines found."
          else
            echo "ingest.log not found."
          fi

      - name: Ingest summary (RAW counts per page)
        run: |
          echo "RAW counts per page (from ingest logs):"
          if [ -f ingest.log ]; then
            grep -E "Page [0-9]+ id stats" ingest.log || echo "No page stats found."
          else
            echo "ingest.log not found."
          fi

      - name: MVP gate
        if: ${{ inputs.enforceGate == 'true' }}
        run: npm run fipi:mvp:check

      - name: Save coverage summary
        if: always()
        run: |
          echo "FIPI Ingest Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Pages:** ${{ github.event.inputs.startPage }}..${{ github.event.inputs.endPage }}  |  **Limit:** ${{ github.event.inputs.limit }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f scripts/fipi/reports/coverage.md ]; then
            echo "### Coverage (excerpt)" >> $GITHUB_STEP_SUMMARY
            head -n 60 scripts/fipi/reports/coverage.md >> $GITHUB_STEP_SUMMARY
          else
            echo "_coverage.md not found_" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Run instructions (echo)
        if: always()
        run: |
          echo "Run (byTask):"
          echo "- Start task: 1"
          echo "- End task: 11"
          echo "- Start page: ${{ github.event.inputs.startPage }}"
          echo "- End page: ${{ github.event.inputs.endPage }}"
          echo "- Limit: ${{ github.event.inputs.limit }}"
          echo "- runToCoverage: ${{ github.event.inputs.runToCoverage }}"
          echo "- enforceGate: ${{ github.event.inputs.enforceGate }}"
          echo "Artifacts: RAW (data/fipi/_raw), labeled (data/fipi/ege/basic), reports (scripts/fipi/reports), debug (scripts/fipi/debug)"

      - name: Upload RAW (_raw)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: fipi-_raw
          path: data/fipi/_raw/**/*
          if-no-files-found: warn
          retention-days: 7

      - name: Upload RAW (raw)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: fipi-raw
          path: data/fipi/raw
          if-no-files-found: warn
          retention-days: 7

      - name: Upload labeled
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: fipi-labeled
          path: data/fipi/ege/basic
          if-no-files-found: warn
          retention-days: 7

      - name: Upload review
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: fipi-review
          path: data/fipi/_review
          if-no-files-found: warn
          retention-days: 7

      - name: Upload debug
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: fipi-debug
          path: scripts/fipi/debug
          if-no-files-found: warn
          retention-days: 7

      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: fipi-reports
          path: scripts/fipi/reports
          if-no-files-found: warn
          retention-days: 7

      - name: Create Pull Request
        if: ${{ github.ref_name != 'main' }}
        uses: peter-evans/create-pull-request@v6
        with:
          title: "FIPI ingest run (mode=${{ inputs.mode }})"
          commit-message: "chore(fipi): ingest artifacts"
          add-paths: |
            data/**
            public/fipi/**
          base: main

      - name: Commit changes (if any)
        if: ${{ inputs.enforceGate != 'true' }}
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "chore(fipi): ingest $(date -u +%Y%m%d%H%M)"
          git push origin HEAD:${{ github.ref_name }}

      - name: How to rerun (help)
        run: |
          echo "Run from Actions â†’ FIPI Ingest (EGE basic):"
          echo "startPage=1 endPage=10 limit=400 enforceGate=false"
          echo "Use branch with updated workflow (or merge to main)."

      # PR creation skipped in this hardened flow; push goes to current ref


